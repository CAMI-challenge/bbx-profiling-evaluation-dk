#!/bin/bash

# exit script if one command fails
set -o errexit

# exit script if Variable is not set
set -o nounset

INPUT=/bbx/mnt/input/biobox.yaml
OUTPUT_DIR=/bbx/mnt/output
OUTPUT=/bbx/mnt/output/metrics.txt
#METADATA=/bbx/mnt/metadata

# Since this script is the entrypoint to your container
# you can access the task in `docker run task` as the first argument
TASK=$1

# Ensure the biobox.yaml file is valid
validate-biobox-file \
  --input ${INPUT} \
  --schema /schema.yaml \

mkdir -p ${OUTPUT_DIR}

# Parse the read locations from this file
PREDICTION=$(yaml2json < ${INPUT} \
        | jq --raw-output '.arguments.prediction.path' )

GROUND_TRUTH=$(yaml2json < ${INPUT} \
        | jq --raw-output '.arguments.ground_truth.path' )

# Use grep to get $TASK in /Taskfile
CMD=$(egrep ^${TASK}: /Taskfile | cut -f 2 -d ':')
if [[ -z ${CMD} ]]; then
  echo "Abort, no task found for '${TASK}'."
  exit 1
fi

# Run the given task with eval.
# Eval evaluates a String as if you would use it on a command line.
eval ${CMD}

# This command writes yaml into the biobox.yaml until the EOF symbol is reached
cat << EOF > ${OUTPUT_DIR}/biobox.yaml
version: 0.1.1
results:
  - name: David Koslicki
    type: txt
    inline: false
    description: Metrics: True Positives, False Positives, False Negatives, Precision, Sensitivity, L1-Norm, Unifrac
    value: metrics.txt
EOF
